| نیم سال اول ۹۵-۹۶    | مبانی برنامه نویسی | موعد تحویل: ۲۶ آبان ۱۳۹۵ ساعت ۲۲:۰۰  |
|:---------------------|:------------------:|:-----------------------------------:|

# تمرین سری پنجم مبانی برنامه نویسی 
لطفا به موارد زیر توجه نمایید:
1. برای هر تمرينی كه در آن از شما برنامه‌ای خواسته شده است فرمت ورودی و خروجی دقيقا مشخص شده است. برنامه شما بايد دقيقا با همين فرمت كار كند تا نمره كامل بگيرد.
2. كد‌های مسائل ۱ الی ۵ را در سايت Quera (كه در كلاس تدريسيار شرح داده شده است) بارگذاری نماييد.

##سوال اول
سری اعداد زير را در نظر بگيريد:
1, 3, 7, 14, 26, …
در اين سری جمله اول و دوم به ترتیب برابر ۱ و ۳ است و جمله n-ام برابر با جمع **دو جمله قبلی** و **عدد n** است.
الف) تابعی بنويسيد كه عدد n را به عنوان ورودی بگيرد و مقدار جمله n-ام را به عنوان نتيجه توليد كند (برگرداند).
ب) تابعی بنويسيد كه عدد x را بگيرد، اگر x یک جمله در اين سری باشد شماره جمله آن به عنوان نتيجه توليد شود و در غير اين صورت عدد -1 برگردانده شود. مثلا اگر x برابر ۱۴ باشد، نتيجه برابر ۴ خواهد بود.
ج) برنامه‌اي بنويسيد كه دو عدد a و b را از كاربر بگيرد و همه اعداد بين a و b را كه عضوی از اين سری هستند را با شماره جمله مشخص كند. برای مثال اگر a = 5 و b = 20 باشد خروجی زير توليد خواهد شد.

ورودی:

	5 20

خروجی:

	7 @ 3
	14 @ 4

##سوال دوم
تابعي به اسم `largest_factor`  بنويسيد كه عدد صحيح n را بگيرد و بزرگترين عامل اول آن را توليد كند.
الف) برنامه‌ای بنویسید که دو عدد x و y را از كاربر بگيرد و با استفاده از اين تابع بزرگترين مقسوم عليه مشترک آنها را بیابد.

ورودی:

	12 4

خروجی:

	4

ب) برنامه‌ای بنویسید که عدد n را از کاربر گرفته و تمامی عوامل اول آنرا با استفاده از این تابع چاپ کند.

ورودی:

	12

خروجی:

	3
	2
	2

##سوال سوم
مساله برج هانوی و روش حل بازگشتي آن را از [ويكی پديا](https://fa.wikipedia.org/wiki/%D8%A8%D8%B1%D8%AC_%D9%87%D8%A7%D9%86%D9%88%DB%8C) مطالعه كنيد. هدف از اين تمرين اين است كه مراحل حل اين مساله برای n حلقه (كه تعداد آن از كاربر گرفته ميشود) را به صورت شكل‌های زير نمايش دهيد.  
به طور **کلی** (توجه کنید که این کد صرفا برای توضیح منطق الگوریتم آورده شده است) کد شما دارای ساختار زیر خواهد بود:  

    void hanoi ( int nDisk, char start, char temp, char finish )
    {
        if ( nDisk == 1 ) {
    
            printf("%c --> %c\n", start, finish);
    
        } else {
    
            hanoi ( nDisk - 1, start, finish, temp );
    
            printf("%c --> %c\n", start, finish);
    
            hanoi ( nDisk - 1, temp, start, finish );
        }
    }

تذکر: 
* توجه کنید که حتما شکل خروجی مطابق آن چیزی باشد که در نمونه آمده است.
* بعد از هر سطری که نام ستون‌ها در آن چاپ شده است، یک سطر خالی ایجاد کنید. (منظور این هست که دوبار `n\` چاپ کنید.)
* حتما از الگوریتم بازگشتی که در صورت سوال ذکر شده است استفاده نمایید.
* برای چاپ ستاره‌ها به این صورت اقدام نمایید که اگر مهره iام را میخواهید چاپ کنید، i ستاره چاپ کنید سپس n - i فاصله‌ی خالی چاپ کرده و درنهایت ۳ فاصله خالی چاپ کنید و به سراغ برج بعدی بروید. (n اندازه بزرگترین مهره بازی یا همان تعداد مهره‌ها می‌باشد.)

ورودی:

	2

خروجی:

	*
	**   
	A     B     C
	
	**    *
	A     B     C
	
	      *     **
	A     B     C
	
	            *
	            **
	A     B     C

##سوال چهارم
حلزونی به صورت زیر در محور مختصات جا به جا میشود:

$$
(x, y) -> (x * x - y * y, 2 * x * y)
$$

برنامه‌ای بنویسید که عدد n را از کابر گرفته، سپس حلزون را در نقطه (1, 2) قرار داده و آنرا n مرحله به جلو حرکت دهد و مختصات نهایی آن را چاپ کند.
ورودی:

    1

خروجی:

    (3, 4)

##سوال پنجم
فرض كنيد چند جمله‌ای درجه دو به فرم $a * x^2 + b * x + c$ تعريف می‌شود. برنامه‌ای بنويسيد كه ضرايب a و b و c را برای دو چند جمله‌ای درجه دو از كاربر بگيرد. سپس عملگر مد نظر كه می‌تواند جمع و ضرب و یا تفريق باشد را از كاربر گرفته و نتيجه عمليات را به صورت زیر چاپ کند:

	   d1 * x^4 + d2 * x^3 + d3 * x^2 + d4 * x^1 + d5 

تذکر:
* دقت کنید که در خروجی هر یک از ضرایب میتواند صفر نیز باشد. (در این حالت صفر را چاپ کنید.)
* تمامی عدد‌هایی که خوانده میشوند صحیح فرض کنید و خروجی را نیز به صورت اعداد صحیح چاپ کنید.

ورودی:

	1 2 3
	1 2 3
	+

خروجی:

	0 * x^4 + 0 * x^3 + 2 * x^2 + 4 * x^1 + 6


