## سوال اول

خروجی قطعه كد زير چيست؟ نحوه توليد خروجی را شرح دهيد. 

در يک جدول مقدار تمام متغيرها (برای آرايه مقدار اعضای آن و برای اشاره‌گر‌ها آدرسی كه به آن اشاره می‌كنند)‌ را بعد از اجرای هر دستور مشخص كنيد.فرض كنيد آدرس شروع آرايه برابر 100 باشد. 


    int a[] = {100, 20, 3, 400, 50, 6, 700, 80, 9};
    int *p1, *p2;
    p1 = a;
    p2 = &a[3];
    a[1] = *(p1 – 1)+ p2[3];
    a[2] = *(p1 + 1) / (*p2 + 3);
    p2 += 2;
    *p2 = 5;
    a[3] = a[0] + *p1;
    for( ; p2 – p1 >= 1; p1++)
    	printf("%d\n", *p2 + *(p1 - 1));

## سوال دوم

در اين تمرين در ابتدا ماتريسی ساخته می‌شود كه تعداد ستونهای آن مشخص است ولی
تعداد سطرهای آن مشخص نيست. سپس از اين ماتريس برای اعمال رياضی استفاده می‌گردد.

برای اين منظور، برنامه‌ای بنويسيد كه ابتدا تعداد ستون‌های يک ماتريس را از كاربر
بگيرد (عدد m). سپس مقدار اعضای هر سطر ماتريس وارد می‌شود، با توجه به
اينكه تعداد سطر‌ها را نمی‌دانیم، زمانی كه يک سطر وارد می‌شود كه همه اعضای آن 0 است، خواندن
سطرها تمام می‌شود (اين سطر با همه اعضای 0 جزو ماتريس در نظر گرفته نمی‌شود).

فرض كنيد n سطر وارد شده
است اين ماتريس را با A نشان می‌دهيم كه يک ماتريس با ابعاد n x m است. اين
برنامه در ادامه یک ماتريس m x n به اسم B درست می‌كند كه
در آن سطر‌ها و ستونهاي A و B باهم عوض شده است. سپس ماتريس C = A x B و ماتريس D = B x A توليد می‌شود.
در انتها همه ماتريس‌های A و B و ‍C و D چاپ می‌شود.

برای مثال، كاربر در ابتدا عدد 3 را وارد ميكند، پس تعداد ستونها سه است، سپس اعداد زير
را به ترتيب از چپ به راست وارد می‌کند:

	1 2 3
	4 5 6
	0 0 0

با اينكار ماتريس A زير توليد خواهد شد

| ستون 1 | ستون 2 | ستون 3 |
| ------ | ------ | ------ |
| 3      | 2      | 1      |
| 6      | 5      | 4      |

سپس در ادامه ماتريس‌های B و C و D توليد و چاپ می‌شود.

فرمت ورودی:

    <m>
    
    <a11> <a12> … <a1m>
    
    <a21> <a22> … <a2m>
    
    <0> <0> … <0>
   

فرمت خروجی:

    A:
    <a11> <a12> … <a1m>
        …
    <an1> <an2> … <anm>
    
    B:
    <a11> <a12> … <a1n>
        …
    <am1> <am2> … <amn>
    
    C:
    <a11> <a12> … <a1n>
        …
    <an1> <an2> … <ann>    
    
    D:
    <a11> <a12> … <a1m>
        …
    <am1> <am2> … <amm>


## سوال سوم

برنامه‌ای بنويسيد كه ابتدا عدد n را از كاربر بگيرد، سپس اطلاعات n عدد گويا را از كاربر گرفته و آنها را در یک آرایه از نوع struct ذخيره كند. سپس از كاربر يك جهت بگيرد كه 1- به معناي نزولي و 1+ به معنای صعودی است. با جهت تعيين شده و با استفاده تابع qsort كه در كلاس شرح داده شده است، اعداد گويای وارد شده را مرتب كرده و آنها را چاپ كند.

فرمت ورودی:

    <n>
    <x> <y>
    …
    <x> <y>
    
    <-1> or <+1>

ورودی:

    2
    1 2
    3 4
    1

فرمت خروجی:

    <x>/<y>
    …
    
    <x>/<y>

خروجی:

	1/2
	3/4

## سوال چهارم

فرض كنيد يک ليست پيوندی از اعداد صحيح داريم. تابعی بنويسيد كه اين ليست و دو عدد صحيح x و y را عنوان ورودی بگيرد، يک نود جديد با مقدار x توليد كند و آن را قبل از نودی كه مقدار آن y است به ليست
اضافه كند. اگر نودي وجود نداشت كه مقدار آن y است، نود جديد
به انتهای ليست اضافه شود.

برنامه‌ای بنويسيد كه یک ليست پيوندی با 1 نود كه مقدار آن 10 است ايجاد كند. از
تابع نوشته شده استفاده كنيد و مقادير x و y را به صورت زير وارد نمايد.

| مرحله  | x      | y      |
| ------ | ------ | ------ |
| 1      | 20     | 100    |
| 2      | 30     | 100    |
| 3      | 40     | 30     |
| 4      | 50     | 20     |
| 5      | 60     | 10     |

اعضای ليست را بعد از انجام هر مرحله چاپ كنيد.

نکات:
* در هر مرحله برای چاپ لیست، اعضای لیست را با space از یکدیگر در یک خط چاپ کنید.
* از آنجایی که این مساله یک تست کیس بیشتر ندارد و مستقل از ورودی می‌باشد پس کد‌های شما به صورت دستی نیز بررسی خواهند شد.

## سوال پنجم

برنامه‌ای بنويسيد كه اسم فايل ورودی و خروجی را از كاربر بگيرد. فايل ورودی
را در فايل خروجی كپی كند ولی تمام حروف به صورت حرف بزرگ باشد و به جای هر رقم،
معادل انگليسی آن با حروف كوچك نوشته شود.

فرمت ورودی:

	<input file name>
	<output file name>

## سوال ششم

فرض كنيد كه اطلاعات زمان با استفاده از time  struct در يک فايل باينری ذخيره شده است.

    struct time{
    	int hour;
    	int min;
    	int sec;
    };

 برنامه‌ای بنويسيد كه كوچكترين زمان را در ابتدای فايل و بزرگترين زمان را در انتهای فايل قرار دهد.