## سوال سوم

برنامه‌ای بنويسيد كه ابتدا عدد n را از كاربر بگيرد، سپس اطلاعات n عدد گويا را از كاربر گرفته و آنها را در یک آرایه از نوع struct ذخيره كند. سپس از كاربر يك جهت بگيرد كه 1- به معناي نزولي و 1+ به معنای صعودی است. با جهت تعيين شده و با استفاده تابع qsort كه در كلاس شرح داده شده است، اعداد گويای وارد شده را مرتب كرده و آنها را چاپ كند.

فرمت ورودی:

    <n>
    <x> <y>
    …
    <x> <y>
    
    <-1> or <+1>

ورودی:

    2
    1 2
    3 4
    1

فرمت خروجی:

    <x>/<y>
    …
    
    <x>/<y>

خروجی:

	1/2
	3/4

## سوال چهارم

فرض كنيد يک ليست پيوندی از اعداد صحيح داريم. تابعی بنويسيد كه اين ليست و دو عدد صحيح x و y را عنوان ورودی بگيرد، يک نود جديد با مقدار x توليد كند و آن را قبل از نودی كه مقدار آن y است به ليست
اضافه كند. اگر نودي وجود نداشت كه مقدار آن y است، نود جديد
به انتهای ليست اضافه شود.

برنامه‌ای بنويسيد كه یک ليست پيوندی با 1 نود كه مقدار آن 10 است ايجاد كند. از
تابع نوشته شده استفاده كنيد و مقادير x و y را به صورت زير وارد نمايد.

| مرحله  | x      | y      |
| ------ | ------ | ------ |
| 1      | 20     | 100    |
| 2      | 30     | 100    |
| 3      | 40     | 30     |
| 4      | 50     | 20     |
| 5      | 60     | 10     |

اعضای ليست را بعد از انجام هر مرحله چاپ كنيد.

نکات:
* در هر مرحله برای چاپ لیست، اعضای لیست را با space از یکدیگر در یک خط چاپ کنید.
* از آنجایی که این مساله یک تست کیس بیشتر ندارد و مستقل از ورودی می‌باشد پس کد‌های شما به صورت دستی نیز بررسی خواهند شد.

## سوال پنجم

برنامه‌ای بنويسيد كه اسم فايل ورودی و خروجی را از كاربر بگيرد. فايل ورودی
را در فايل خروجی كپی كند ولی تمام حروف به صورت حرف بزرگ باشد و به جای هر رقم،
معادل انگليسی آن با حروف كوچك نوشته شود.

فرمت ورودی:

	<input file name>
	<output file name>

## سوال ششم

فرض كنيد كه اطلاعات زمان با استفاده از time  struct در يک فايل باينری ذخيره شده است.

    struct time{
    	int hour;
    	int min;
    	int sec;
    };

 برنامه‌ای بنويسيد كه كوچكترين زمان را در ابتدای فايل و بزرگترين زمان را در انتهای فايل قرار دهد.